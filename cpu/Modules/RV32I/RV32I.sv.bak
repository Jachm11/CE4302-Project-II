module RV32I
(
	input logic [31:0] read_data,
	input logic data_ready,
	input logic [31:0] instruction,
	input logic instruction_ready,

	input logic clock,
	input logic async_reset,

	
	output logic memory_transaction,
	output logic mem_write,
	output logic [31:0] alu_result,
	output logic [31:0] data_out,
	output logic [3:0] byte_enablers,
	output logic [31:0] pc,
);

	Multiplexer_MxN #(.M(3), .N(32)) mux_pc_src(
		"select","channels",
		"o");
	
	Register_N_with_enabler_vP #(.N(32)) pc(
		"d","enabler","clock","reset",
		"q");
	
	Multiplexer_MxN #(.M(2), .N(32)) mux_pc_out(
		"select","channels",
		"o");
	
	Adder_N #(.N(32)) addr_pc_4(
		"A","B",
		"O");

	Pipe_Decoder_vP pipe_d(
		"instruction_F","PC_F","PC_4_F",
		"enabler","clock","async_reset","sync_reset","instruction_D","PC_D","PC_4_D");
	



endmodule